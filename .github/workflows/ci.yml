# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: 82212582

    steps:
    - name: git Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.REPO_TOKEN }}
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Gen Version
      id: gen-version
      run: echo "VERSION=`date +%Y%m%d%H%M`" >> $GITHUB_ENV

    - name: BaseACR Login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        login-server: ${{ secrets.BASEACR_LOGIN_SERVER }}

    - name: Build&Tag Image
      run: |
        docker build -t ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} -f Dockerfile .
        docker tag ${{ secrets.BASEACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ secrets.APPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

    - name: CI/CD ACR Login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.CICD_USERNAME }}
        password: ${{ secrets.CICD_PASSWORD }}
        login-server: ${{ secrets.APPACR_LOGIN_SERVER }}

    - name: Push Image
      run: |
        docker push ${{ secrets.APPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

    - name: Update Kubernetes resources
      run: |
        cd k8s/overlays/prod
        kustomize edit set image ${{ secrets.APPACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        cat kustomization.yaml

    - name: Commit files
      run: |
        cd k8s
        git config --global user.email "github-actions@github.com"
        git config --global user.name "github-actions"
        git commit -am "Update image tag"
        git push -u origin main
